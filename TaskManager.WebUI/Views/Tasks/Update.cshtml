@model TaskManager.WebUI.ViewModels.Tasks.UpdateViewModel

<div class="modal_overlay h-100" id="modal_overlay" tabindex="-1" role="dialog">
    <div class="container h-100">
        <div class="row h-100 justify-content-center align-items-center">
            <div class="col-lg-8">
                <div class="modal_window" role="document">
                    <div class="modal_content">
                        <div class="modal_header">
                            <h3>Update</h3>
                            <button type="button" class="close_modal_button" id="close_modal_button">
                                <img src="~/img/add_sign.png" />
                            </button>
                        </div>
                        <div class="modal_body">
                            <form method="post" asp-action="Update" data-ajax="true" data-ajax-success="onValidateTask">
                                <div asp-validation-summary="All" class="text-danger"></div>

                                <input asp-for="TaskId" type="hidden" />
                                <input asp-for="UserId" type="hidden" />
                                <input asp-for="Finished" type="hidden" />

                                <div class="form_row">
                                    <input asp-for="Description" placeholder="Description" class="select_description" />
                                    @*<span asp-validation-for="Description" class="text-danger"></span>*@
                                </div>

                                <div class="form_row">
                                    <div class="select_type_container">
                                        <select class="select_type" required asp-for="Type">
                                            <!option value="Work" @((Model.Type == "Work") ? "selected" : "")>Work</!option>
                                            <!option value="Home" @((Model.Type == "Home") ? "selected" : "")>Home</!option>
                                            <!option value="Fun" @((Model.Type == "Fun") ? "selected" : "")>Fun</!option>
                                        </select>
                                        <span class="arrow"></span>
                                        @*<span asp-validation-for="Type" class="text-danger"></span>*@
                                    </div>

                                    <div class="select_priority_container">
                                        <select class="select_priority" required asp-for="Priority">
                                            <!option value="0" @((Model.Priority == 0) ? "selected" : "")>0</!option>
                                            <!option value="1" @((Model.Priority == 1) ? "selected" : "")>1</!option>
                                            <!option value="2" @((Model.Priority == 2) ? "selected" : "")>2</!option>
                                            <!option value="3" @((Model.Priority == 3) ? "selected" : "")>3</!option>
                                        </select>
                                        <span class="arrow"></span>
                                        @*<span asp-validation-for="Priority" class="text-danger"></span>*@
                                    </div>
                                </div>

                                <div class="form_row">
                                    <input asp-for="Deadline" class="select_deadline" />
                                    @*<span asp-validation-for="Deadline" class="text-danger"></span>*@

                                    <input type="submit" value="Apply" class="apply_button" />
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
